---
- name: Load cluster_nodes variables
  set_fact:
    cluster_nodes: "{{ lookup('template','nodes.j2') | from_yaml }}"

- name: Steps to destroy VM using Libvirt
  block:
    - name: List snapshots
      shell: "virsh -q snapshot-list --domain {{ item.name }} | cut -d ' ' -f2"
      with_items: "{{ cluster_nodes }}"
      register: with_output

    - name: Delete snapshots
      command: "virsh snapshot-delete --domain {{ item.0.item.name }} {{ item.1 }}"
      with_subelements:
        - "{{ with_output.results }}"
        - "stdout_lines"

    - name: Destroy VMs
      virt:
        command: destroy
        name: "{{ item.name }}"
      with_items: "{{ cluster_nodes }}"
      ignore_errors: True

    - name: Undefine VMs
      virt:
        command: undefine
        name: "{{ item.name }}"
      with_items: "{{ cluster_nodes }}"
      ignore_errors: True

    - name: Remove OS images from libvirt directory
      become: True
      file:
        path: "{{ libvirt_dir }}/{{ item.name }}.qcow2"
        state: absent
      with_items: "{{ cluster_nodes }}"

    - name: Delete qcow2 images
      file:
        path: "{{ libvirt_dir }}/{{ item.name }}.qcow2"
        state: absent
      with_items: "{{ cluster_nodes }}"
      when: destroy_images | bool

- import_tasks: libvirt/destroy_networks.yml
  when: net_interfaces | length > 0
  tags: network

- include_tasks: libvirt/destroy_storages.yml
  when: vm_volumes|length > 0

- name: "Clean nodes config in {{ tmp_dir }}"
  file:
    path: "{{ tmp_dir }}/{{ item.name }}"
    state: absent
  with_items: "{{ cluster_nodes }}"

- name: Clean nodes from ssh_config
  blockinfile:
    block: "{{ lookup('template', 'ssh_config.j2') }}"
    path: "{{ ansible_env.HOME }}/.ssh/config"
    state: absent
  ignore_errors: True

- name: Clean nodes from SSH known_hosts
  command:
    cmd: ssh-keygen -f "{{ ansible_env.HOME }}/.ssh/known_hosts" -R "{{ item.1.address }}"
  with_subelements:
    - "{{ cluster_nodes }}"
    - interfaces
  when: item.1.address is defined and item.1.external is defined and item.1.external
  ignore_errors: True

- name: Clean /etc/hosts file
  become: True
  lineinfile:
    path: /etc/hosts
    line: "{{ item.1.address }} {{ item.0.name }}.{{ dns_domain }} {{ item.0.name }}"
    state: absent
  with_subelements:
    - "{{ cluster_nodes }}"
    - interfaces
  when: item.1.address is defined and item.1.external is defined and item.1.external
  ignore_errors: True

- name: "Clean {{ ansible_env.HOME }}/.ssh/known_hosts"
  known_hosts:
    path: "{{ ansible_env.HOME }}/.ssh/known_hosts"
    name: "{{ item.name }}.{{ dns_domain }}"
    state: absent
  with_items: "{{ cluster_nodes }}"
  ignore_errors: True
