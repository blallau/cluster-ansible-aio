#cloud-config
# https://cloudinit.readthedocs.io/en/latest/topics/format.html #
users:
  - default

disable_root: False
ssh_pwauth: True

# mount_default_fields
# These values are used to fill in any entries in 'mounts' that are not
# complete.  This must be an array, and must have 6 fields.
mount_default_fields: [ None, None, "auto", "defaults,nofail", "0", "2" ]

# Unlock the default user
chpasswd:
  list: |
    root:root
    {{ os_default_user }}:{{ os_default_user }}
  expire: False
# System settings
resize_rootfs: True
packages:
#  - curl (already on centos)
#  - rsync (already on centos)
  - socat
#  - ethtool (already on centos)
  - net-tools
#  - psmisc (already on centos)
#  - openssh-server (already on centos)
#   - gnupg2 (already on centos)
  - conntrack
  - lsof
  - wireshark
{% if item.os_type in ['debian', 'ubuntu'] %}
  - dnsutils
  - bridge-utils
  - tshark
  - python3-minimal
  - open-iscsi
{% if allow_virt %}
  - python3-pip
  - pkg-config
  - libvirt-dev
  - libvirt-daemon-system
{% endif %}
{% elif item.os_type == 'centos' %}
  - python3
  - tc
  - ebtables
  - iscsi-initiator-utils
{% endif %}
{% if vm_volumes|length > 0 and vm_volumes_mount %}
 disk_setup:
 {% for disk in item.disks %}
   /dev/{{ disk.device }}:
     table_type: 'mbr'
     layout: true
     overwrite: true
 {% endfor %}
#setup the file system on the device
fs_setup:
{% for disk in item.disks %}
  - label: 'data{{ loop.index0 }}'
    filesystem: '{{ vm_volumes_fs_format }}'
    device: /dev/{{ disk.device }}
    partition: 'auto'
    overwrite: true
{% endfor %}
{% endif %}
bootcmd:
  - [ sh, -c, echo "=========bootcmd=========" ]
  - if grep -Gq "^\s*UseDNS" /etc/ssh/sshd_config; then sed -re "s/^\s*(UseDNS)\s+(yes|no)/\1 no/" -i.$(date -u +%Y%m%d%H%M%S) /etc/ssh/sshd_config; else echo "UseDNS no" >> /etc/ssh/sshd_config; fi
write_files:
{% if rename_net_interface | bool %}
 - content: |
{% for intf in item.interfaces %}
    SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="{{ intf.mac }}", NAME="{{ intf.name | regex_replace('(.*)-br$', '\\1') }}"
{% endfor %}
   path: /etc/udev/rules.d/70-persistent-net.rules
   owner: root:root
   permissions: '0644'
{% endif %}
{% if item.os_type in ['debian', 'ubuntu'] %}
 - content: |
     XKBMODEL="pc105"
     XKBLAYOUT="fr"
     XKBVARIANT=""
     XKBOPTIONS=""
     BACKSPACE="guess"
   path: /etc/default/keyboard
   owner: root:root
   permissions: '0644'
{% endif %}
{% if vm_volumes|length > 0 and vm_volumes_mount %}
mounts:
{% for disk in item.disks %}
  - [ "/dev/{{ disk.device }}", "{{ vm_volumes_mount_path }}/data-{{ loop.index0 }}/data-{{ loop.index0 }}" ]
{% endfor %}
{% endif %}
timezone: {{ guest_timezone | default(virt_infra_timezone) }}
runcmd:
  - [ sh, -c, echo "=========runcmd=========" ]
{% if vm_volumes|length > 0 and vm_volumes_mount %}
{% for disk in item.disks %}
  - mkdir {{ vm_volumes_mount_path }}/data-{{ loop.index0 }}
{% endfor %}
{% endif %}
#  - systemctl disable NetworkManager --now
  - systemctl restart sshd
{% if allow_virt %}
  - pip3 install ansible==2.9.13 libvirt-python netaddr
{% endif %}
{% if item.os_type in ['debian', 'ubuntu'] %}
  - DEBIAN_FRONTEND=noninteractive apt-get install -y open-iscsi
  - DEBIAN_FRONTEND=noninteractive apt-get install -y console-data
{% endif %}
{% if item.os_type in ['centos'] %}
  - localectl set-keymap fr
{% endif %}
  - systemctl enable --now iscsid
{% if item.os_type == 'TOREMOVE' %}
  - DEBIAN_FRONTEND=noninteractive apt-get install -y keyboard-configuration console-setup
  - curl -s https://s3.amazonaws.com/download.draios.com/DRAIOS-GPG-KEY.public | sudo apt-key add -
  - curl -s -o /etc/apt/sources.list.d/draios.list https://s3.amazonaws.com/download.draios.com/stable/deb/draios.list
  - DEBIAN_FRONTEND=noninteractive apt-get -y update
  - DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade
  - DEBIAN_FRONTEND=noninteractive apt-get -y install linux-headers-$(dpkg -l | egrep "linux-image-[0-9]" | sort -r | head -n 1 | awk '{ print $2 }' | awk -F '-' '{ print substr($0, index($0,$3)) }')
  - DEBIAN_FRONTEND=noninteractive apt-get -y install ncurses-term sysdig
  - DEBIAN_FRONTEND=noninteractive apt-get -y autoremove
{% endif %}

# To know when to log in, if reading console
final_message: "SYSTEM READY TO LOG IN"

# Set the default user
system_info:
  default_user:
    name: {{ os_default_user }}
