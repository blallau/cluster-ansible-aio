{% set ip = item.cidr | ipaddr('1') | ipaddr('address') %}
{% set netmask = item.cidr | ipaddr('netmask') %}
<network>
  <name>{{ item.name }}</name>
{% if item.forward is defined and item.forward == 'bridge' %}
  <forward mode='bridge'/>
  <bridge name='{{ item.bridge }}'/>
  <mtu size='{{ libvirt_default_mtu }}'/>
{% else %}
{% if item.forward is defined and item.forward == 'nat' %}
  <forward mode='nat'/>
{% endif %}
  <bridge name='{{ item.name }}' stp='on' delay='0'/>
{% if local_dns_enabled and item.forward is defined and item.forward == 'nat' %}
  <dns enable='yes'/>
  <domain name='{{ dns_domain }}' localOnly='yes'/>
{% else %}
  <dns enable='no'/>
{% endif %}
  <ip address='{{ ip }}' netmask='{{ netmask }}'>
{% if item.mode == 'dhcp' %}
    {% set dhcp_range_start = item.cidr | ipaddr('100') | ipaddr('address') -%}
    {% set dhcp_range_end = item.cidr | ipaddr('254') | ipaddr('address') -%}
    <dhcp>
      <range start='{{ dhcp_range_start }}' end='{{ dhcp_range_end }}'/>
{% if item.pxe is defined and item.pxe %}
      <bootp file='http://{{ ip }}/boot.ipxe'/>
{% endif %}
{% for node in cluster_nodes %}
      <host mac='{{ node.interfaces | selectattr('mode', 'equalto', 'dhcp') | selectattr('bridge', 'equalto', item.name) | map(attribute='mac') | join }}' ip='{{ node.interfaces | selectattr('mode', 'equalto', 'dhcp') | selectattr('bridge', 'equalto', item.name) | map(attribute='address') | join }}'/>
{% endfor %}
    </dhcp>
{% endif %}
  </ip>
{% endif %}
</network>
