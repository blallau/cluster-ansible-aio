#jinja2: lstrip_blocks: True
<domain type='kvm'{% if vm_os_distro == 'fcos' %} xmlns:qemu='http://libvirt.org/schemas/domain/qemu/1.0'{% endif %}>
  <name>{{ item.name }}</name>
  <metadata>
    <aio:instance xmlns:aio="https://github.com/blallau/ansible-aio">
      <aio:inventory group="{{ item.role }}" distro="{{ vm_os_distro }}"/>
    </aio:instance>
  </metadata>
  {% if vm_os_distro == 'fcos' %}
  <qemu:commandline>
    <qemu:arg value='-fw_cfg'/>
    <qemu:arg value='name=opt/com.coreos/config,file={{ tmp_dir }}/{{ item.name }}/config.ign'/>
  </qemu:commandline>
  {% endif %}
  <memory unit='GiB'>{{ item.ram }}</memory>
  <vcpu placement='static'>{{ item.vcpu }}</vcpu>
  <resource>
    <partition>/machine</partition>
  </resource>
  <os>
    <type arch='x86_64' machine='pc-q35-4.2'>hvm</type>
  </os>
  <features>
    <acpi/>
    <apic/>
  </features>
  <cpu mode='host-passthrough' match='exact'>
    <feature policy='require' name='vmx'/>
  </cpu>
  <clock offset='variable' adjustment='0' basis='utc'>
    <timer name='rtc' tickpolicy='catchup'/>
    <timer name='pit' tickpolicy='delay'/>
    <timer name='hpet' present='no'/>
  </clock>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>destroy</on_crash>
  <pm>
    <suspend-to-mem enabled='no'/>
    <suspend-to-disk enabled='no'/>
  </pm>
  <devices>
    <emulator>{% if ansible_distribution|lower == 'centos' %}/usr/libexec/qemu-kvm{% elif ansible_distribution|lower == 'ubuntu' %}/usr/bin/qemu-system-x86_64{% endif %}</emulator>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2' cache='none' io='native'/>
      <source file='{{ libvirt_dir }}/{{ item.name }}.qcow2'/>
      <backingStore/>
      <target dev='vda' bus='virtio'/>
      <boot order='1'/>
    </disk>
    {% if vm_os_distro == 'debian' %}
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw'/>
      <source file='{{ tmp_dir }}/{{ item.name }}/seed.img'/>
      <backingStore/>
      <target dev='vdb' bus='virtio'/>
      <boot order='2'/>
    </disk>
    {% elif vm_os_distro == 'centos' or vm_os_distro == 'ubuntu' %}
    <disk type='file' device='cdrom'>
      <driver name='qemu' type='raw'/>
      <source file='{{ tmp_dir }}/{{ item.name }}/config.iso'/>
      <backingStore/>
      <target dev='hda' bus='ide'/>
      <boot order='2'/>
      <readonly/>
    </disk>
    {% endif %}
    {% if storage_volume_enabled %}
    {% for disk in item.disks %}
    <disk type='block' device='disk'>
      <driver name='qemu' type='raw' cache='none' io='native'/>
      <source dev='/dev/{{ virt_volume_group }}/{{ disk.name }}'/>
      <target dev='{{ disk.device }}' bus='virtio'/>
    </disk>
    {% endfor %}
    {% endif %}
    <controller type='virtio-serial' index='0'>
      <alias name='virtio-serial0'/>
    </controller>
    {% for intf in item.interfaces %}
    <interface type='bridge'>
      <source bridge='{{ intf.bridge }}'/>
      <target dev='vnet{{ loop.index }}'/>
      {% if intf.mac is defined %}
        <mac address='{{ intf.mac }}'/>
      {% endif %}
      <model type='virtio'/>
      <driver name='vhost' queues='1'/>
      <alias name='net{{ loop.index }}'/>
    </interface>
    {% endfor %}
    <serial type='pty'>
      <source path='/dev/pts/1'/>
      <target port='0'/>
      <alias name='serial0'/>
    </serial>
    <console type='pty' tty='/dev/pts/1'>
      <source path='/dev/pts/1'/>
      <target type='serial' port='0'/>
      <alias name='serial0'/>
    </console>
    <input type='keyboard' bus='ps2'>
    <alias name='input1'/>
    </input>
    <graphics type='vnc' port='5900' autoport='yes' listen='0.0.0.0'>
      <listen type='address' address='0.0.0.0'/>
    </graphics>
    <memballoon model='virtio'>
      <alias name='balloon0'/>
    </memballoon>
    <rng model='virtio'>
      <alias name='rng0'/>
      <backend model='random'>/dev/urandom</backend>
    </rng>
  </devices>
</domain>
