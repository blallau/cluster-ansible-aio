---
- name: Load cluster_nodes variables
  set_fact:
    cluster_nodes: "{{ lookup('template','nodes.j2') | from_yaml }}"

- name: "Display cluster_nodes"
  debug:
    msg: "{{ cluster_nodes | to_nice_yaml(indent=2) }}"

- import_tasks: enable_nested_virt.yml
  become: true
  when: nested_virt_enabled | bool

- name: Populate /etc/hosts file
  lineinfile:
    path: /etc/hosts
    insertafter: EOF
    line: "{{ hostvars[item.name]['ansible_' + item.interfaces | selectattr('external', 'defined') | map(attribute='name') | first]['ipv4']['address'] }}  {{ hostvars[item.name]['inventory_hostname'] }}"
  loop: "{{ cluster_nodes }}"
  become: true

- name: Disable SELinux
  selinux:
    state: disabled
  when: ansible_distribution|lower == "centos"
  become: true

- name: Add Docker CentOS repo
  yum_repository:
    name: docker-ce
    description: Docker CE repo
    baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
    gpgcheck: true
    gpgkey: https://download.docker.com/linux/centos/gpg
  when: ansible_distribution|lower == "centos"
  become: true

- name: Add Docker Ubuntu repo signing keys
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present
  when: ansible_distribution|lower == "ubuntu"
  become: true

- name: Wait for automatic Ubuntu system updates
  shell: while sudo fuser /var/lib/apt/lists/lock >/dev/null 2>&1; do sleep 1; done;
  when: ansible_distribution|lower == "ubuntu"
  become: true

- name: Add Docker Ubuntu repo
  apt_repository:
    repo: "deb https://download.docker.com/linux/ubuntu xenial edge"
    state: present
  when: ansible_distribution|lower == "ubuntu"
- name: Add Ubuntu standard xenial repo
  apt_repository:
    repo: "deb http://archive.ubuntu.com/ubuntu/ xenial main restricted"
    state: present
  when: ansible_distribution|lower == "ubuntu"
  become: true

- name: Add Ubuntu standard xenial-security repo
  apt_repository:
    repo: "deb http://security.ubuntu.com/ubuntu xenial-security main restricted"
    state: present
    update_cache: true
  when: ansible_distribution|lower == "ubuntu"
  become: true

- name: Wait for automatic Ubuntu system updates
  shell: while sudo fuser /var/lib/apt/lists/lock >/dev/null 2>&1; do sleep 1; done;
  args:
    executable: /bin/bash
  when: ansible_distribution|lower == "ubuntu"
  become: true

- import_tasks: enable_apt_proxy.yml
  when: apt_cache_enabled | bool
  become: true

- name: Wait for automatic Ubuntu system updates
  shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done;
  args:
    executable: /bin/bash
  when: ansible_distribution|lower == "ubuntu"
  become: true

- name: Install CentOS packages
  yum:
    name: "{{ yum_packages }}"
    update_cache: true
  when: ansible_distribution|lower == "centos"
  become: true

- name: Install Ubuntu or Debian packages
  apt:
    pkg: "{{ apt_packages }}"
    state: latest
    update_cache: true
  when: ansible_distribution|lower == "ubuntu" or ansible_distribution|lower == "debian"
  become: true

- name: Install/Update PIP packages
  pip:
    name: "{{ pip_packages }}"
  become: true
#    state: latest
#    virtualenv: "{{ pip_venv_path }}"

# - name: "Adding user {{ os_default_user }} to group sudo"
#   user:
#     name: "{{ os_default_user }}"
#     groups: sudo
#     append: true

# - name: Start NTP service
#   systemd:
#     name: "{{ 'ntp' if ansible_distribution|lower == 'ubuntu' or ansible_distribution|lower == 'debian' else 'ntpd' }}"
#     enabled: true
#     state: started

- import_tasks: configure_ssh.yml
  become: true

- name: Enable cockpit
  systemd:
    name: "cockpit"
    state: restarted
    daemon_reload: true
    enabled: true
  when: ansible_distribution|lower == "centos" and cockpit_enabled|bool
  become: true
